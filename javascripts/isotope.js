var App =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"isotope": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/javascripts/";
/******/
/******/ 	var jsonpArray = window["webpackJsonpApp"] = window["webpackJsonpApp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./isotope.js","vendor"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./isotope.js":
/*!********************!*\
  !*** ./isotope.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_LOCAL_MODULE_1__, __WEBPACK_LOCAL_MODULE_1__factory, __WEBPACK_LOCAL_MODULE_1__module;var __WEBPACK_LOCAL_MODULE_2__, __WEBPACK_LOCAL_MODULE_2__factory, __WEBPACK_LOCAL_MODULE_2__module;var __WEBPACK_LOCAL_MODULE_3__, __WEBPACK_LOCAL_MODULE_3__factory, __WEBPACK_LOCAL_MODULE_3__module;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_4__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_LOCAL_MODULE_5__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_6__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_LOCAL_MODULE_7__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_LOCAL_MODULE_8__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_LOCAL_MODULE_9__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_LOCAL_MODULE_10__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_LOCAL_MODULE_11__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_LOCAL_MODULE_12__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/*!\n * Isotope PACKAGED v3.0.6\n *\n * Licensed GPLv3 for open source use\n * or Isotope Commercial License for commercial use\n *\n * https://isotope.metafizzy.co\n * Copyright 2010-2018 Metafizzy\n */\n\n!function (t, e) {\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"../../node_modules/jquery/dist/jquery.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (i) {\n    return e(t, i);\n  }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(window, function (t, e) {\n  \"use strict\";\n\n  function i(i, s, a) {\n    function u(t, e, o) {\n      var n,\n        s = \"$().\" + i + '(\"' + e + '\")';\n      return t.each(function (t, u) {\n        var h = a.data(u, i);\n        if (!h) return void r(i + \" not initialized. Cannot call methods, i.e. \" + s);\n        var d = h[e];\n        if (!d || \"_\" == e.charAt(0)) return void r(s + \" is not a valid method\");\n        var l = d.apply(h, o);\n        n = void 0 === n ? l : n;\n      }), void 0 !== n ? n : t;\n    }\n    function h(t, e) {\n      t.each(function (t, o) {\n        var n = a.data(o, i);\n        n ? (n.option(e), n._init()) : (n = new s(o, e), a.data(o, i, n));\n      });\n    }\n    a = a || e || t.jQuery, a && (s.prototype.option || (s.prototype.option = function (t) {\n      a.isPlainObject(t) && (this.options = a.extend(!0, this.options, t));\n    }), a.fn[i] = function (t) {\n      if (\"string\" == typeof t) {\n        var e = n.call(arguments, 1);\n        return u(this, t, e);\n      }\n      return h(this, t), this;\n    }, o(a));\n  }\n  function o(t) {\n    !t || t && t.bridget || (t.bridget = i);\n  }\n  var n = Array.prototype.slice,\n    s = t.console,\n    r = \"undefined\" == typeof s ? function () {} : function (t) {\n      s.error(t);\n    };\n  return o(e || t.jQuery), i;\n}), function (t, e) {\n   true ? !(__WEBPACK_LOCAL_MODULE_1__factory = (e), (__WEBPACK_LOCAL_MODULE_1__module = { id: \"ev-emitter/ev-emitter\", exports: {}, loaded: false }), __WEBPACK_LOCAL_MODULE_1__ = (typeof __WEBPACK_LOCAL_MODULE_1__factory === 'function' ? (__WEBPACK_LOCAL_MODULE_1__factory.call(__WEBPACK_LOCAL_MODULE_1__module.exports, __webpack_require__, __WEBPACK_LOCAL_MODULE_1__module.exports, __WEBPACK_LOCAL_MODULE_1__module)) : __WEBPACK_LOCAL_MODULE_1__factory), (__WEBPACK_LOCAL_MODULE_1__module.loaded = true), __WEBPACK_LOCAL_MODULE_1__ === undefined && (__WEBPACK_LOCAL_MODULE_1__ = __WEBPACK_LOCAL_MODULE_1__module.exports)) : undefined;\n}(\"undefined\" != typeof window ? window : this, function () {\n  function t() {}\n  var e = t.prototype;\n  return e.on = function (t, e) {\n    if (t && e) {\n      var i = this._events = this._events || {},\n        o = i[t] = i[t] || [];\n      return o.indexOf(e) == -1 && o.push(e), this;\n    }\n  }, e.once = function (t, e) {\n    if (t && e) {\n      this.on(t, e);\n      var i = this._onceEvents = this._onceEvents || {},\n        o = i[t] = i[t] || {};\n      return o[e] = !0, this;\n    }\n  }, e.off = function (t, e) {\n    var i = this._events && this._events[t];\n    if (i && i.length) {\n      var o = i.indexOf(e);\n      return o != -1 && i.splice(o, 1), this;\n    }\n  }, e.emitEvent = function (t, e) {\n    var i = this._events && this._events[t];\n    if (i && i.length) {\n      i = i.slice(0), e = e || [];\n      for (var o = this._onceEvents && this._onceEvents[t], n = 0; n < i.length; n++) {\n        var s = i[n],\n          r = o && o[s];\n        r && (this.off(t, s), delete o[s]), s.apply(this, e);\n      }\n      return this;\n    }\n  }, e.allOff = function () {\n    delete this._events, delete this._onceEvents;\n  }, t;\n}), function (t, e) {\n   true ? !(__WEBPACK_LOCAL_MODULE_2__factory = (e), (__WEBPACK_LOCAL_MODULE_2__module = { id: \"get-size/get-size\", exports: {}, loaded: false }), __WEBPACK_LOCAL_MODULE_2__ = (typeof __WEBPACK_LOCAL_MODULE_2__factory === 'function' ? (__WEBPACK_LOCAL_MODULE_2__factory.call(__WEBPACK_LOCAL_MODULE_2__module.exports, __webpack_require__, __WEBPACK_LOCAL_MODULE_2__module.exports, __WEBPACK_LOCAL_MODULE_2__module)) : __WEBPACK_LOCAL_MODULE_2__factory), (__WEBPACK_LOCAL_MODULE_2__module.loaded = true), __WEBPACK_LOCAL_MODULE_2__ === undefined && (__WEBPACK_LOCAL_MODULE_2__ = __WEBPACK_LOCAL_MODULE_2__module.exports)) : undefined;\n}(window, function () {\n  \"use strict\";\n\n  function t(t) {\n    var e = parseFloat(t),\n      i = t.indexOf(\"%\") == -1 && !isNaN(e);\n    return i && e;\n  }\n  function e() {}\n  function i() {\n    for (var t = {\n        width: 0,\n        height: 0,\n        innerWidth: 0,\n        innerHeight: 0,\n        outerWidth: 0,\n        outerHeight: 0\n      }, e = 0; e < h; e++) {\n      var i = u[e];\n      t[i] = 0;\n    }\n    return t;\n  }\n  function o(t) {\n    var e = getComputedStyle(t);\n    return e || a(\"Style returned \" + e + \". Are you running this code in a hidden iframe on Firefox? See https://bit.ly/getsizebug1\"), e;\n  }\n  function n() {\n    if (!d) {\n      d = !0;\n      var e = document.createElement(\"div\");\n      e.style.width = \"200px\", e.style.padding = \"1px 2px 3px 4px\", e.style.borderStyle = \"solid\", e.style.borderWidth = \"1px 2px 3px 4px\", e.style.boxSizing = \"border-box\";\n      var i = document.body || document.documentElement;\n      i.appendChild(e);\n      var n = o(e);\n      r = 200 == Math.round(t(n.width)), s.isBoxSizeOuter = r, i.removeChild(e);\n    }\n  }\n  function s(e) {\n    if (n(), \"string\" == typeof e && (e = document.querySelector(e)), e && \"object\" == _typeof(e) && e.nodeType) {\n      var s = o(e);\n      if (\"none\" == s.display) return i();\n      var a = {};\n      a.width = e.offsetWidth, a.height = e.offsetHeight;\n      for (var d = a.isBorderBox = \"border-box\" == s.boxSizing, l = 0; l < h; l++) {\n        var f = u[l],\n          c = s[f],\n          m = parseFloat(c);\n        a[f] = isNaN(m) ? 0 : m;\n      }\n      var p = a.paddingLeft + a.paddingRight,\n        y = a.paddingTop + a.paddingBottom,\n        g = a.marginLeft + a.marginRight,\n        v = a.marginTop + a.marginBottom,\n        _ = a.borderLeftWidth + a.borderRightWidth,\n        z = a.borderTopWidth + a.borderBottomWidth,\n        I = d && r,\n        x = t(s.width);\n      x !== !1 && (a.width = x + (I ? 0 : p + _));\n      var S = t(s.height);\n      return S !== !1 && (a.height = S + (I ? 0 : y + z)), a.innerWidth = a.width - (p + _), a.innerHeight = a.height - (y + z), a.outerWidth = a.width + g, a.outerHeight = a.height + v, a;\n    }\n  }\n  var r,\n    a = \"undefined\" == typeof console ? e : function (t) {\n      console.error(t);\n    },\n    u = [\"paddingLeft\", \"paddingRight\", \"paddingTop\", \"paddingBottom\", \"marginLeft\", \"marginRight\", \"marginTop\", \"marginBottom\", \"borderLeftWidth\", \"borderRightWidth\", \"borderTopWidth\", \"borderBottomWidth\"],\n    h = u.length,\n    d = !1;\n  return s;\n}), function (t, e) {\n  \"use strict\";\n\n   true ? !(__WEBPACK_LOCAL_MODULE_3__factory = (e), (__WEBPACK_LOCAL_MODULE_3__module = { id: \"desandro-matches-selector/matches-selector\", exports: {}, loaded: false }), __WEBPACK_LOCAL_MODULE_3__ = (typeof __WEBPACK_LOCAL_MODULE_3__factory === 'function' ? (__WEBPACK_LOCAL_MODULE_3__factory.call(__WEBPACK_LOCAL_MODULE_3__module.exports, __webpack_require__, __WEBPACK_LOCAL_MODULE_3__module.exports, __WEBPACK_LOCAL_MODULE_3__module)) : __WEBPACK_LOCAL_MODULE_3__factory), (__WEBPACK_LOCAL_MODULE_3__module.loaded = true), __WEBPACK_LOCAL_MODULE_3__ === undefined && (__WEBPACK_LOCAL_MODULE_3__ = __WEBPACK_LOCAL_MODULE_3__module.exports)) : undefined;\n}(window, function () {\n  \"use strict\";\n\n  var t = function () {\n    var t = window.Element.prototype;\n    if (t.matches) return \"matches\";\n    if (t.matchesSelector) return \"matchesSelector\";\n    for (var e = [\"webkit\", \"moz\", \"ms\", \"o\"], i = 0; i < e.length; i++) {\n      var o = e[i],\n        n = o + \"MatchesSelector\";\n      if (t[n]) return n;\n    }\n  }();\n  return function (e, i) {\n    return e[t](i);\n  };\n}), function (t, e) {\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_3__], __WEBPACK_LOCAL_MODULE_4__ = ((function (i) {\n    return e(t, i);\n  }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__))) : undefined;\n}(window, function (t, e) {\n  var i = {};\n  i.extend = function (t, e) {\n    for (var i in e) t[i] = e[i];\n    return t;\n  }, i.modulo = function (t, e) {\n    return (t % e + e) % e;\n  };\n  var o = Array.prototype.slice;\n  i.makeArray = function (t) {\n    if (Array.isArray(t)) return t;\n    if (null === t || void 0 === t) return [];\n    var e = \"object\" == _typeof(t) && \"number\" == typeof t.length;\n    return e ? o.call(t) : [t];\n  }, i.removeFrom = function (t, e) {\n    var i = t.indexOf(e);\n    i != -1 && t.splice(i, 1);\n  }, i.getParent = function (t, i) {\n    for (; t.parentNode && t != document.body;) if (t = t.parentNode, e(t, i)) return t;\n  }, i.getQueryElement = function (t) {\n    return \"string\" == typeof t ? document.querySelector(t) : t;\n  }, i.handleEvent = function (t) {\n    var e = \"on\" + t.type;\n    this[e] && this[e](t);\n  }, i.filterFindElements = function (t, o) {\n    t = i.makeArray(t);\n    var n = [];\n    return t.forEach(function (t) {\n      if (t instanceof HTMLElement) {\n        if (!o) return void n.push(t);\n        e(t, o) && n.push(t);\n        for (var i = t.querySelectorAll(o), s = 0; s < i.length; s++) n.push(i[s]);\n      }\n    }), n;\n  }, i.debounceMethod = function (t, e, i) {\n    i = i || 100;\n    var o = t.prototype[e],\n      n = e + \"Timeout\";\n    t.prototype[e] = function () {\n      var t = this[n];\n      clearTimeout(t);\n      var e = arguments,\n        s = this;\n      this[n] = setTimeout(function () {\n        o.apply(s, e), delete s[n];\n      }, i);\n    };\n  }, i.docReady = function (t) {\n    var e = document.readyState;\n    \"complete\" == e || \"interactive\" == e ? setTimeout(t) : document.addEventListener(\"DOMContentLoaded\", t);\n  }, i.toDashed = function (t) {\n    return t.replace(/(.)([A-Z])/g, function (t, e, i) {\n      return e + \"-\" + i;\n    }).toLowerCase();\n  };\n  var n = t.console;\n  return i.htmlInit = function (e, o) {\n    i.docReady(function () {\n      var s = i.toDashed(o),\n        r = \"data-\" + s,\n        a = document.querySelectorAll(\"[\" + r + \"]\"),\n        u = document.querySelectorAll(\".js-\" + s),\n        h = i.makeArray(a).concat(i.makeArray(u)),\n        d = r + \"-options\",\n        l = t.jQuery;\n      h.forEach(function (t) {\n        var i,\n          s = t.getAttribute(r) || t.getAttribute(d);\n        try {\n          i = s && JSON.parse(s);\n        } catch (a) {\n          return void (n && n.error(\"Error parsing \" + r + \" on \" + t.className + \": \" + a));\n        }\n        var u = new e(t, i);\n        l && l.data(t, o, u);\n      });\n    });\n  }, i;\n}), function (t, e) {\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_1__, __WEBPACK_LOCAL_MODULE_2__], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t\t\t__WEBPACK_LOCAL_MODULE_5__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__)) : undefined;\n}(window, function (t, e) {\n  \"use strict\";\n\n  function i(t) {\n    for (var e in t) return !1;\n    return e = null, !0;\n  }\n  function o(t, e) {\n    t && (this.element = t, this.layout = e, this.position = {\n      x: 0,\n      y: 0\n    }, this._create());\n  }\n  function n(t) {\n    return t.replace(/([A-Z])/g, function (t) {\n      return \"-\" + t.toLowerCase();\n    });\n  }\n  var s = document.documentElement.style,\n    r = \"string\" == typeof s.transition ? \"transition\" : \"WebkitTransition\",\n    a = \"string\" == typeof s.transform ? \"transform\" : \"WebkitTransform\",\n    u = {\n      WebkitTransition: \"webkitTransitionEnd\",\n      transition: \"transitionend\"\n    }[r],\n    h = {\n      transform: a,\n      transition: r,\n      transitionDuration: r + \"Duration\",\n      transitionProperty: r + \"Property\",\n      transitionDelay: r + \"Delay\"\n    },\n    d = o.prototype = Object.create(t.prototype);\n  d.constructor = o, d._create = function () {\n    this._transn = {\n      ingProperties: {},\n      clean: {},\n      onEnd: {}\n    }, this.css({\n      position: \"absolute\"\n    });\n  }, d.handleEvent = function (t) {\n    var e = \"on\" + t.type;\n    this[e] && this[e](t);\n  }, d.getSize = function () {\n    this.size = e(this.element);\n  }, d.css = function (t) {\n    var e = this.element.style;\n    for (var i in t) {\n      var o = h[i] || i;\n      e[o] = t[i];\n    }\n  }, d.getPosition = function () {\n    var t = getComputedStyle(this.element),\n      e = this.layout._getOption(\"originLeft\"),\n      i = this.layout._getOption(\"originTop\"),\n      o = t[e ? \"left\" : \"right\"],\n      n = t[i ? \"top\" : \"bottom\"],\n      s = parseFloat(o),\n      r = parseFloat(n),\n      a = this.layout.size;\n    o.indexOf(\"%\") != -1 && (s = s / 100 * a.width), n.indexOf(\"%\") != -1 && (r = r / 100 * a.height), s = isNaN(s) ? 0 : s, r = isNaN(r) ? 0 : r, s -= e ? a.paddingLeft : a.paddingRight, r -= i ? a.paddingTop : a.paddingBottom, this.position.x = s, this.position.y = r;\n  }, d.layoutPosition = function () {\n    var t = this.layout.size,\n      e = {},\n      i = this.layout._getOption(\"originLeft\"),\n      o = this.layout._getOption(\"originTop\"),\n      n = i ? \"paddingLeft\" : \"paddingRight\",\n      s = i ? \"left\" : \"right\",\n      r = i ? \"right\" : \"left\",\n      a = this.position.x + t[n];\n    e[s] = this.getXValue(a), e[r] = \"\";\n    var u = o ? \"paddingTop\" : \"paddingBottom\",\n      h = o ? \"top\" : \"bottom\",\n      d = o ? \"bottom\" : \"top\",\n      l = this.position.y + t[u];\n    e[h] = this.getYValue(l), e[d] = \"\", this.css(e), this.emitEvent(\"layout\", [this]);\n  }, d.getXValue = function (t) {\n    var e = this.layout._getOption(\"horizontal\");\n    return this.layout.options.percentPosition && !e ? t / this.layout.size.width * 100 + \"%\" : t + \"px\";\n  }, d.getYValue = function (t) {\n    var e = this.layout._getOption(\"horizontal\");\n    return this.layout.options.percentPosition && e ? t / this.layout.size.height * 100 + \"%\" : t + \"px\";\n  }, d._transitionTo = function (t, e) {\n    this.getPosition();\n    var i = this.position.x,\n      o = this.position.y,\n      n = t == this.position.x && e == this.position.y;\n    if (this.setPosition(t, e), n && !this.isTransitioning) return void this.layoutPosition();\n    var s = t - i,\n      r = e - o,\n      a = {};\n    a.transform = this.getTranslate(s, r), this.transition({\n      to: a,\n      onTransitionEnd: {\n        transform: this.layoutPosition\n      },\n      isCleaning: !0\n    });\n  }, d.getTranslate = function (t, e) {\n    var i = this.layout._getOption(\"originLeft\"),\n      o = this.layout._getOption(\"originTop\");\n    return t = i ? t : -t, e = o ? e : -e, \"translate3d(\" + t + \"px, \" + e + \"px, 0)\";\n  }, d.goTo = function (t, e) {\n    this.setPosition(t, e), this.layoutPosition();\n  }, d.moveTo = d._transitionTo, d.setPosition = function (t, e) {\n    this.position.x = parseFloat(t), this.position.y = parseFloat(e);\n  }, d._nonTransition = function (t) {\n    this.css(t.to), t.isCleaning && this._removeStyles(t.to);\n    for (var e in t.onTransitionEnd) t.onTransitionEnd[e].call(this);\n  }, d.transition = function (t) {\n    if (!parseFloat(this.layout.options.transitionDuration)) return void this._nonTransition(t);\n    var e = this._transn;\n    for (var i in t.onTransitionEnd) e.onEnd[i] = t.onTransitionEnd[i];\n    for (i in t.to) e.ingProperties[i] = !0, t.isCleaning && (e.clean[i] = !0);\n    if (t.from) {\n      this.css(t.from);\n      var o = this.element.offsetHeight;\n      o = null;\n    }\n    this.enableTransition(t.to), this.css(t.to), this.isTransitioning = !0;\n  };\n  var l = \"opacity,\" + n(a);\n  d.enableTransition = function () {\n    if (!this.isTransitioning) {\n      var t = this.layout.options.transitionDuration;\n      t = \"number\" == typeof t ? t + \"ms\" : t, this.css({\n        transitionProperty: l,\n        transitionDuration: t,\n        transitionDelay: this.staggerDelay || 0\n      }), this.element.addEventListener(u, this, !1);\n    }\n  }, d.onwebkitTransitionEnd = function (t) {\n    this.ontransitionend(t);\n  }, d.onotransitionend = function (t) {\n    this.ontransitionend(t);\n  };\n  var f = {\n    \"-webkit-transform\": \"transform\"\n  };\n  d.ontransitionend = function (t) {\n    if (t.target === this.element) {\n      var e = this._transn,\n        o = f[t.propertyName] || t.propertyName;\n      if (delete e.ingProperties[o], i(e.ingProperties) && this.disableTransition(), o in e.clean && (this.element.style[t.propertyName] = \"\", delete e.clean[o]), o in e.onEnd) {\n        var n = e.onEnd[o];\n        n.call(this), delete e.onEnd[o];\n      }\n      this.emitEvent(\"transitionEnd\", [this]);\n    }\n  }, d.disableTransition = function () {\n    this.removeTransitionStyles(), this.element.removeEventListener(u, this, !1), this.isTransitioning = !1;\n  }, d._removeStyles = function (t) {\n    var e = {};\n    for (var i in t) e[i] = \"\";\n    this.css(e);\n  };\n  var c = {\n    transitionProperty: \"\",\n    transitionDuration: \"\",\n    transitionDelay: \"\"\n  };\n  return d.removeTransitionStyles = function () {\n    this.css(c);\n  }, d.stagger = function (t) {\n    t = isNaN(t) ? 0 : t, this.staggerDelay = t + \"ms\";\n  }, d.removeElem = function () {\n    this.element.parentNode.removeChild(this.element), this.css({\n      display: \"\"\n    }), this.emitEvent(\"remove\", [this]);\n  }, d.remove = function () {\n    return r && parseFloat(this.layout.options.transitionDuration) ? (this.once(\"transitionEnd\", function () {\n      this.removeElem();\n    }), void this.hide()) : void this.removeElem();\n  }, d.reveal = function () {\n    delete this.isHidden, this.css({\n      display: \"\"\n    });\n    var t = this.layout.options,\n      e = {},\n      i = this.getHideRevealTransitionEndProperty(\"visibleStyle\");\n    e[i] = this.onRevealTransitionEnd, this.transition({\n      from: t.hiddenStyle,\n      to: t.visibleStyle,\n      isCleaning: !0,\n      onTransitionEnd: e\n    });\n  }, d.onRevealTransitionEnd = function () {\n    this.isHidden || this.emitEvent(\"reveal\");\n  }, d.getHideRevealTransitionEndProperty = function (t) {\n    var e = this.layout.options[t];\n    if (e.opacity) return \"opacity\";\n    for (var i in e) return i;\n  }, d.hide = function () {\n    this.isHidden = !0, this.css({\n      display: \"\"\n    });\n    var t = this.layout.options,\n      e = {},\n      i = this.getHideRevealTransitionEndProperty(\"hiddenStyle\");\n    e[i] = this.onHideTransitionEnd, this.transition({\n      from: t.visibleStyle,\n      to: t.hiddenStyle,\n      isCleaning: !0,\n      onTransitionEnd: e\n    });\n  }, d.onHideTransitionEnd = function () {\n    this.isHidden && (this.css({\n      display: \"none\"\n    }), this.emitEvent(\"hide\"));\n  }, d.destroy = function () {\n    this.css({\n      position: \"\",\n      left: \"\",\n      right: \"\",\n      top: \"\",\n      bottom: \"\",\n      transition: \"\",\n      transform: \"\"\n    });\n  }, o;\n}), function (t, e) {\n  \"use strict\";\n\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_1__, __WEBPACK_LOCAL_MODULE_2__, __WEBPACK_LOCAL_MODULE_4__, __WEBPACK_LOCAL_MODULE_5__], __WEBPACK_LOCAL_MODULE_6__ = ((function (i, o, n, s) {\n    return e(t, i, o, n, s);\n  }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__))) : undefined;\n}(window, function (t, e, i, o, n) {\n  \"use strict\";\n\n  function s(t, e) {\n    var i = o.getQueryElement(t);\n    if (!i) return void (u && u.error(\"Bad element for \" + this.constructor.namespace + \": \" + (i || t)));\n    this.element = i, h && (this.$element = h(this.element)), this.options = o.extend({}, this.constructor.defaults), this.option(e);\n    var n = ++l;\n    this.element.outlayerGUID = n, f[n] = this, this._create();\n    var s = this._getOption(\"initLayout\");\n    s && this.layout();\n  }\n  function r(t) {\n    function e() {\n      t.apply(this, arguments);\n    }\n    return e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e;\n  }\n  function a(t) {\n    if (\"number\" == typeof t) return t;\n    var e = t.match(/(^\\d*\\.?\\d*)(\\w*)/),\n      i = e && e[1],\n      o = e && e[2];\n    if (!i.length) return 0;\n    i = parseFloat(i);\n    var n = m[o] || 1;\n    return i * n;\n  }\n  var u = t.console,\n    h = t.jQuery,\n    d = function d() {},\n    l = 0,\n    f = {};\n  s.namespace = \"outlayer\", s.Item = n, s.defaults = {\n    containerStyle: {\n      position: \"relative\"\n    },\n    initLayout: !0,\n    originLeft: !0,\n    originTop: !0,\n    resize: !0,\n    resizeContainer: !0,\n    transitionDuration: \"0.4s\",\n    hiddenStyle: {\n      opacity: 0,\n      transform: \"scale(0.001)\"\n    },\n    visibleStyle: {\n      opacity: 1,\n      transform: \"scale(1)\"\n    }\n  };\n  var c = s.prototype;\n  o.extend(c, e.prototype), c.option = function (t) {\n    o.extend(this.options, t);\n  }, c._getOption = function (t) {\n    var e = this.constructor.compatOptions[t];\n    return e && void 0 !== this.options[e] ? this.options[e] : this.options[t];\n  }, s.compatOptions = {\n    initLayout: \"isInitLayout\",\n    horizontal: \"isHorizontal\",\n    layoutInstant: \"isLayoutInstant\",\n    originLeft: \"isOriginLeft\",\n    originTop: \"isOriginTop\",\n    resize: \"isResizeBound\",\n    resizeContainer: \"isResizingContainer\"\n  }, c._create = function () {\n    this.reloadItems(), this.stamps = [], this.stamp(this.options.stamp), o.extend(this.element.style, this.options.containerStyle);\n    var t = this._getOption(\"resize\");\n    t && this.bindResize();\n  }, c.reloadItems = function () {\n    this.items = this._itemize(this.element.children);\n  }, c._itemize = function (t) {\n    for (var e = this._filterFindItemElements(t), i = this.constructor.Item, o = [], n = 0; n < e.length; n++) {\n      var s = e[n],\n        r = new i(s, this);\n      o.push(r);\n    }\n    return o;\n  }, c._filterFindItemElements = function (t) {\n    return o.filterFindElements(t, this.options.itemSelector);\n  }, c.getItemElements = function () {\n    return this.items.map(function (t) {\n      return t.element;\n    });\n  }, c.layout = function () {\n    this._resetLayout(), this._manageStamps();\n    var t = this._getOption(\"layoutInstant\"),\n      e = void 0 !== t ? t : !this._isLayoutInited;\n    this.layoutItems(this.items, e), this._isLayoutInited = !0;\n  }, c._init = c.layout, c._resetLayout = function () {\n    this.getSize();\n  }, c.getSize = function () {\n    this.size = i(this.element);\n  }, c._getMeasurement = function (t, e) {\n    var o,\n      n = this.options[t];\n    n ? (\"string\" == typeof n ? o = this.element.querySelector(n) : n instanceof HTMLElement && (o = n), this[t] = o ? i(o)[e] : n) : this[t] = 0;\n  }, c.layoutItems = function (t, e) {\n    t = this._getItemsForLayout(t), this._layoutItems(t, e), this._postLayout();\n  }, c._getItemsForLayout = function (t) {\n    return t.filter(function (t) {\n      return !t.isIgnored;\n    });\n  }, c._layoutItems = function (t, e) {\n    if (this._emitCompleteOnItems(\"layout\", t), t && t.length) {\n      var i = [];\n      t.forEach(function (t) {\n        var o = this._getItemLayoutPosition(t);\n        o.item = t, o.isInstant = e || t.isLayoutInstant, i.push(o);\n      }, this), this._processLayoutQueue(i);\n    }\n  }, c._getItemLayoutPosition = function () {\n    return {\n      x: 0,\n      y: 0\n    };\n  }, c._processLayoutQueue = function (t) {\n    this.updateStagger(), t.forEach(function (t, e) {\n      this._positionItem(t.item, t.x, t.y, t.isInstant, e);\n    }, this);\n  }, c.updateStagger = function () {\n    var t = this.options.stagger;\n    return null === t || void 0 === t ? void (this.stagger = 0) : (this.stagger = a(t), this.stagger);\n  }, c._positionItem = function (t, e, i, o, n) {\n    o ? t.goTo(e, i) : (t.stagger(n * this.stagger), t.moveTo(e, i));\n  }, c._postLayout = function () {\n    this.resizeContainer();\n  }, c.resizeContainer = function () {\n    var t = this._getOption(\"resizeContainer\");\n    if (t) {\n      var e = this._getContainerSize();\n      e && (this._setContainerMeasure(e.width, !0), this._setContainerMeasure(e.height, !1));\n    }\n  }, c._getContainerSize = d, c._setContainerMeasure = function (t, e) {\n    if (void 0 !== t) {\n      var i = this.size;\n      i.isBorderBox && (t += e ? i.paddingLeft + i.paddingRight + i.borderLeftWidth + i.borderRightWidth : i.paddingBottom + i.paddingTop + i.borderTopWidth + i.borderBottomWidth), t = Math.max(t, 0), this.element.style[e ? \"width\" : \"height\"] = t + \"px\";\n    }\n  }, c._emitCompleteOnItems = function (t, e) {\n    function i() {\n      n.dispatchEvent(t + \"Complete\", null, [e]);\n    }\n    function o() {\n      r++, r == s && i();\n    }\n    var n = this,\n      s = e.length;\n    if (!e || !s) return void i();\n    var r = 0;\n    e.forEach(function (e) {\n      e.once(t, o);\n    });\n  }, c.dispatchEvent = function (t, e, i) {\n    var o = e ? [e].concat(i) : i;\n    if (this.emitEvent(t, o), h) if (this.$element = this.$element || h(this.element), e) {\n      var n = h.Event(e);\n      n.type = t, this.$element.trigger(n, i);\n    } else this.$element.trigger(t, i);\n  }, c.ignore = function (t) {\n    var e = this.getItem(t);\n    e && (e.isIgnored = !0);\n  }, c.unignore = function (t) {\n    var e = this.getItem(t);\n    e && delete e.isIgnored;\n  }, c.stamp = function (t) {\n    t = this._find(t), t && (this.stamps = this.stamps.concat(t), t.forEach(this.ignore, this));\n  }, c.unstamp = function (t) {\n    t = this._find(t), t && t.forEach(function (t) {\n      o.removeFrom(this.stamps, t), this.unignore(t);\n    }, this);\n  }, c._find = function (t) {\n    if (t) return \"string\" == typeof t && (t = this.element.querySelectorAll(t)), t = o.makeArray(t);\n  }, c._manageStamps = function () {\n    this.stamps && this.stamps.length && (this._getBoundingRect(), this.stamps.forEach(this._manageStamp, this));\n  }, c._getBoundingRect = function () {\n    var t = this.element.getBoundingClientRect(),\n      e = this.size;\n    this._boundingRect = {\n      left: t.left + e.paddingLeft + e.borderLeftWidth,\n      top: t.top + e.paddingTop + e.borderTopWidth,\n      right: t.right - (e.paddingRight + e.borderRightWidth),\n      bottom: t.bottom - (e.paddingBottom + e.borderBottomWidth)\n    };\n  }, c._manageStamp = d, c._getElementOffset = function (t) {\n    var e = t.getBoundingClientRect(),\n      o = this._boundingRect,\n      n = i(t),\n      s = {\n        left: e.left - o.left - n.marginLeft,\n        top: e.top - o.top - n.marginTop,\n        right: o.right - e.right - n.marginRight,\n        bottom: o.bottom - e.bottom - n.marginBottom\n      };\n    return s;\n  }, c.handleEvent = o.handleEvent, c.bindResize = function () {\n    t.addEventListener(\"resize\", this), this.isResizeBound = !0;\n  }, c.unbindResize = function () {\n    t.removeEventListener(\"resize\", this), this.isResizeBound = !1;\n  }, c.onresize = function () {\n    this.resize();\n  }, o.debounceMethod(s, \"onresize\", 100), c.resize = function () {\n    this.isResizeBound && this.needsResizeLayout() && this.layout();\n  }, c.needsResizeLayout = function () {\n    var t = i(this.element),\n      e = this.size && t;\n    return e && t.innerWidth !== this.size.innerWidth;\n  }, c.addItems = function (t) {\n    var e = this._itemize(t);\n    return e.length && (this.items = this.items.concat(e)), e;\n  }, c.appended = function (t) {\n    var e = this.addItems(t);\n    e.length && (this.layoutItems(e, !0), this.reveal(e));\n  }, c.prepended = function (t) {\n    var e = this._itemize(t);\n    if (e.length) {\n      var i = this.items.slice(0);\n      this.items = e.concat(i), this._resetLayout(), this._manageStamps(), this.layoutItems(e, !0), this.reveal(e), this.layoutItems(i);\n    }\n  }, c.reveal = function (t) {\n    if (this._emitCompleteOnItems(\"reveal\", t), t && t.length) {\n      var e = this.updateStagger();\n      t.forEach(function (t, i) {\n        t.stagger(i * e), t.reveal();\n      });\n    }\n  }, c.hide = function (t) {\n    if (this._emitCompleteOnItems(\"hide\", t), t && t.length) {\n      var e = this.updateStagger();\n      t.forEach(function (t, i) {\n        t.stagger(i * e), t.hide();\n      });\n    }\n  }, c.revealItemElements = function (t) {\n    var e = this.getItems(t);\n    this.reveal(e);\n  }, c.hideItemElements = function (t) {\n    var e = this.getItems(t);\n    this.hide(e);\n  }, c.getItem = function (t) {\n    for (var e = 0; e < this.items.length; e++) {\n      var i = this.items[e];\n      if (i.element == t) return i;\n    }\n  }, c.getItems = function (t) {\n    t = o.makeArray(t);\n    var e = [];\n    return t.forEach(function (t) {\n      var i = this.getItem(t);\n      i && e.push(i);\n    }, this), e;\n  }, c.remove = function (t) {\n    var e = this.getItems(t);\n    this._emitCompleteOnItems(\"remove\", e), e && e.length && e.forEach(function (t) {\n      t.remove(), o.removeFrom(this.items, t);\n    }, this);\n  }, c.destroy = function () {\n    var t = this.element.style;\n    t.height = \"\", t.position = \"\", t.width = \"\", this.items.forEach(function (t) {\n      t.destroy();\n    }), this.unbindResize();\n    var e = this.element.outlayerGUID;\n    delete f[e], delete this.element.outlayerGUID, h && h.removeData(this.element, this.constructor.namespace);\n  }, s.data = function (t) {\n    t = o.getQueryElement(t);\n    var e = t && t.outlayerGUID;\n    return e && f[e];\n  }, s.create = function (t, e) {\n    var i = r(s);\n    return i.defaults = o.extend({}, s.defaults), o.extend(i.defaults, e), i.compatOptions = o.extend({}, s.compatOptions), i.namespace = t, i.data = s.data, i.Item = r(n), o.htmlInit(i, t), h && h.bridget && h.bridget(t, i), i;\n  };\n  var m = {\n    ms: 1,\n    s: 1e3\n  };\n  return s.Item = n, s;\n}), function (t, e) {\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_6__], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t\t\t__WEBPACK_LOCAL_MODULE_7__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__)) : undefined;\n}(window, function (t) {\n  \"use strict\";\n\n  function e() {\n    t.Item.apply(this, arguments);\n  }\n  var i = e.prototype = Object.create(t.Item.prototype),\n    o = i._create;\n  i._create = function () {\n    this.id = this.layout.itemGUID++, o.call(this), this.sortData = {};\n  }, i.updateSortData = function () {\n    if (!this.isIgnored) {\n      this.sortData.id = this.id, this.sortData[\"original-order\"] = this.id, this.sortData.random = Math.random();\n      var t = this.layout.options.getSortData,\n        e = this.layout._sorters;\n      for (var i in t) {\n        var o = e[i];\n        this.sortData[i] = o(this.element, this);\n      }\n    }\n  };\n  var n = i.destroy;\n  return i.destroy = function () {\n    n.apply(this, arguments), this.css({\n      display: \"\"\n    });\n  }, e;\n}), function (t, e) {\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_2__, __WEBPACK_LOCAL_MODULE_6__], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t\t\t__WEBPACK_LOCAL_MODULE_8__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__)) : undefined;\n}(window, function (t, e) {\n  \"use strict\";\n\n  function i(t) {\n    this.isotope = t, t && (this.options = t.options[this.namespace], this.element = t.element, this.items = t.filteredItems, this.size = t.size);\n  }\n  var o = i.prototype,\n    n = [\"_resetLayout\", \"_getItemLayoutPosition\", \"_manageStamp\", \"_getContainerSize\", \"_getElementOffset\", \"needsResizeLayout\", \"_getOption\"];\n  return n.forEach(function (t) {\n    o[t] = function () {\n      return e.prototype[t].apply(this.isotope, arguments);\n    };\n  }), o.needsVerticalResizeLayout = function () {\n    var e = t(this.isotope.element),\n      i = this.isotope.size && e;\n    return i && e.innerHeight != this.isotope.size.innerHeight;\n  }, o._getMeasurement = function () {\n    this.isotope._getMeasurement.apply(this, arguments);\n  }, o.getColumnWidth = function () {\n    this.getSegmentSize(\"column\", \"Width\");\n  }, o.getRowHeight = function () {\n    this.getSegmentSize(\"row\", \"Height\");\n  }, o.getSegmentSize = function (t, e) {\n    var i = t + e,\n      o = \"outer\" + e;\n    if (this._getMeasurement(i, o), !this[i]) {\n      var n = this.getFirstItemSize();\n      this[i] = n && n[o] || this.isotope.size[\"inner\" + e];\n    }\n  }, o.getFirstItemSize = function () {\n    var e = this.isotope.filteredItems[0];\n    return e && e.element && t(e.element);\n  }, o.layout = function () {\n    this.isotope.layout.apply(this.isotope, arguments);\n  }, o.getSize = function () {\n    this.isotope.getSize(), this.size = this.isotope.size;\n  }, i.modes = {}, i.create = function (t, e) {\n    function n() {\n      i.apply(this, arguments);\n    }\n    return n.prototype = Object.create(o), n.prototype.constructor = n, e && (n.options = e), n.prototype.namespace = t, i.modes[t] = n, n;\n  }, i;\n}), function (t, e) {\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_6__, __WEBPACK_LOCAL_MODULE_2__], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t\t\t__WEBPACK_LOCAL_MODULE_9__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__)) : undefined;\n}(window, function (t, e) {\n  var i = t.create(\"masonry\");\n  i.compatOptions.fitWidth = \"isFitWidth\";\n  var o = i.prototype;\n  return o._resetLayout = function () {\n    this.getSize(), this._getMeasurement(\"columnWidth\", \"outerWidth\"), this._getMeasurement(\"gutter\", \"outerWidth\"), this.measureColumns(), this.colYs = [];\n    for (var t = 0; t < this.cols; t++) this.colYs.push(0);\n    this.maxY = 0, this.horizontalColIndex = 0;\n  }, o.measureColumns = function () {\n    if (this.getContainerWidth(), !this.columnWidth) {\n      var t = this.items[0],\n        i = t && t.element;\n      this.columnWidth = i && e(i).outerWidth || this.containerWidth;\n    }\n    var o = this.columnWidth += this.gutter,\n      n = this.containerWidth + this.gutter,\n      s = n / o,\n      r = o - n % o,\n      a = r && r < 1 ? \"round\" : \"floor\";\n    s = Math[a](s), this.cols = Math.max(s, 1);\n  }, o.getContainerWidth = function () {\n    var t = this._getOption(\"fitWidth\"),\n      i = t ? this.element.parentNode : this.element,\n      o = e(i);\n    this.containerWidth = o && o.innerWidth;\n  }, o._getItemLayoutPosition = function (t) {\n    t.getSize();\n    var e = t.size.outerWidth % this.columnWidth,\n      i = e && e < 1 ? \"round\" : \"ceil\",\n      o = Math[i](t.size.outerWidth / this.columnWidth);\n    o = Math.min(o, this.cols);\n    for (var n = this.options.horizontalOrder ? \"_getHorizontalColPosition\" : \"_getTopColPosition\", s = this[n](o, t), r = {\n        x: this.columnWidth * s.col,\n        y: s.y\n      }, a = s.y + t.size.outerHeight, u = o + s.col, h = s.col; h < u; h++) this.colYs[h] = a;\n    return r;\n  }, o._getTopColPosition = function (t) {\n    var e = this._getTopColGroup(t),\n      i = Math.min.apply(Math, e);\n    return {\n      col: e.indexOf(i),\n      y: i\n    };\n  }, o._getTopColGroup = function (t) {\n    if (t < 2) return this.colYs;\n    for (var e = [], i = this.cols + 1 - t, o = 0; o < i; o++) e[o] = this._getColGroupY(o, t);\n    return e;\n  }, o._getColGroupY = function (t, e) {\n    if (e < 2) return this.colYs[t];\n    var i = this.colYs.slice(t, t + e);\n    return Math.max.apply(Math, i);\n  }, o._getHorizontalColPosition = function (t, e) {\n    var i = this.horizontalColIndex % this.cols,\n      o = t > 1 && i + t > this.cols;\n    i = o ? 0 : i;\n    var n = e.size.outerWidth && e.size.outerHeight;\n    return this.horizontalColIndex = n ? i + t : this.horizontalColIndex, {\n      col: i,\n      y: this._getColGroupY(i, t)\n    };\n  }, o._manageStamp = function (t) {\n    var i = e(t),\n      o = this._getElementOffset(t),\n      n = this._getOption(\"originLeft\"),\n      s = n ? o.left : o.right,\n      r = s + i.outerWidth,\n      a = Math.floor(s / this.columnWidth);\n    a = Math.max(0, a);\n    var u = Math.floor(r / this.columnWidth);\n    u -= r % this.columnWidth ? 0 : 1, u = Math.min(this.cols - 1, u);\n    for (var h = this._getOption(\"originTop\"), d = (h ? o.top : o.bottom) + i.outerHeight, l = a; l <= u; l++) this.colYs[l] = Math.max(d, this.colYs[l]);\n  }, o._getContainerSize = function () {\n    this.maxY = Math.max.apply(Math, this.colYs);\n    var t = {\n      height: this.maxY\n    };\n    return this._getOption(\"fitWidth\") && (t.width = this._getContainerFitWidth()), t;\n  }, o._getContainerFitWidth = function () {\n    for (var t = 0, e = this.cols; --e && 0 === this.colYs[e];) t++;\n    return (this.cols - t) * this.columnWidth - this.gutter;\n  }, o.needsResizeLayout = function () {\n    var t = this.containerWidth;\n    return this.getContainerWidth(), t != this.containerWidth;\n  }, i;\n}), function (t, e) {\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_8__, __WEBPACK_LOCAL_MODULE_9__], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t\t\t__WEBPACK_LOCAL_MODULE_10__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__)) : undefined;\n}(window, function (t, e) {\n  \"use strict\";\n\n  var i = t.create(\"masonry\"),\n    o = i.prototype,\n    n = {\n      _getElementOffset: !0,\n      layout: !0,\n      _getMeasurement: !0\n    };\n  for (var s in e.prototype) n[s] || (o[s] = e.prototype[s]);\n  var r = o.measureColumns;\n  o.measureColumns = function () {\n    this.items = this.isotope.filteredItems, r.call(this);\n  };\n  var a = o._getOption;\n  return o._getOption = function (t) {\n    return \"fitWidth\" == t ? void 0 !== this.options.isFitWidth ? this.options.isFitWidth : this.options.fitWidth : a.apply(this.isotope, arguments);\n  }, i;\n}), function (t, e) {\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_8__], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t\t\t__WEBPACK_LOCAL_MODULE_11__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__)) : undefined;\n}(window, function (t) {\n  \"use strict\";\n\n  var e = t.create(\"fitRows\"),\n    i = e.prototype;\n  return i._resetLayout = function () {\n    this.x = 0, this.y = 0, this.maxY = 0, this._getMeasurement(\"gutter\", \"outerWidth\");\n  }, i._getItemLayoutPosition = function (t) {\n    t.getSize();\n    var e = t.size.outerWidth + this.gutter,\n      i = this.isotope.size.innerWidth + this.gutter;\n    0 !== this.x && e + this.x > i && (this.x = 0, this.y = this.maxY);\n    var o = {\n      x: this.x,\n      y: this.y\n    };\n    return this.maxY = Math.max(this.maxY, this.y + t.size.outerHeight), this.x += e, o;\n  }, i._getContainerSize = function () {\n    return {\n      height: this.maxY\n    };\n  }, e;\n}), function (t, e) {\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_8__], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t\t\t__WEBPACK_LOCAL_MODULE_12__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__)) : undefined;\n}(window, function (t) {\n  \"use strict\";\n\n  var e = t.create(\"vertical\", {\n      horizontalAlignment: 0\n    }),\n    i = e.prototype;\n  return i._resetLayout = function () {\n    this.y = 0;\n  }, i._getItemLayoutPosition = function (t) {\n    t.getSize();\n    var e = (this.isotope.size.innerWidth - t.size.outerWidth) * this.options.horizontalAlignment,\n      i = this.y;\n    return this.y += t.size.outerHeight, {\n      x: e,\n      y: i\n    };\n  }, i._getContainerSize = function () {\n    return {\n      height: this.y\n    };\n  }, e;\n}), function (t, e) {\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_6__, __WEBPACK_LOCAL_MODULE_2__, __WEBPACK_LOCAL_MODULE_3__, __WEBPACK_LOCAL_MODULE_4__, __WEBPACK_LOCAL_MODULE_7__, __WEBPACK_LOCAL_MODULE_8__, __WEBPACK_LOCAL_MODULE_10__, __WEBPACK_LOCAL_MODULE_11__, __WEBPACK_LOCAL_MODULE_12__], __WEBPACK_AMD_DEFINE_RESULT__ = (function (i, o, n, s, r, a) {\n    return e(t, i, o, n, s, r, a);\n  }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(window, function (t, e, i, o, n, s, r) {\n  function a(t, e) {\n    return function (i, o) {\n      for (var n = 0; n < t.length; n++) {\n        var s = t[n],\n          r = i.sortData[s],\n          a = o.sortData[s];\n        if (r > a || r < a) {\n          var u = void 0 !== e[s] ? e[s] : e,\n            h = u ? 1 : -1;\n          return (r > a ? 1 : -1) * h;\n        }\n      }\n      return 0;\n    };\n  }\n  var u = t.jQuery,\n    h = String.prototype.trim ? function (t) {\n      return t.trim();\n    } : function (t) {\n      return t.replace(/^\\s+|\\s+$/g, \"\");\n    },\n    d = e.create(\"isotope\", {\n      layoutMode: \"masonry\",\n      isJQueryFiltering: !0,\n      sortAscending: !0\n    });\n  d.Item = s, d.LayoutMode = r;\n  var l = d.prototype;\n  l._create = function () {\n    this.itemGUID = 0, this._sorters = {}, this._getSorters(), e.prototype._create.call(this), this.modes = {}, this.filteredItems = this.items, this.sortHistory = [\"original-order\"];\n    for (var t in r.modes) this._initLayoutMode(t);\n  }, l.reloadItems = function () {\n    this.itemGUID = 0, e.prototype.reloadItems.call(this);\n  }, l._itemize = function () {\n    for (var t = e.prototype._itemize.apply(this, arguments), i = 0; i < t.length; i++) {\n      var o = t[i];\n      o.id = this.itemGUID++;\n    }\n    return this._updateItemsSortData(t), t;\n  }, l._initLayoutMode = function (t) {\n    var e = r.modes[t],\n      i = this.options[t] || {};\n    this.options[t] = e.options ? n.extend(e.options, i) : i, this.modes[t] = new e(this);\n  }, l.layout = function () {\n    return !this._isLayoutInited && this._getOption(\"initLayout\") ? void this.arrange() : void this._layout();\n  }, l._layout = function () {\n    var t = this._getIsInstant();\n    this._resetLayout(), this._manageStamps(), this.layoutItems(this.filteredItems, t), this._isLayoutInited = !0;\n  }, l.arrange = function (t) {\n    this.option(t), this._getIsInstant();\n    var e = this._filter(this.items);\n    this.filteredItems = e.matches, this._bindArrangeComplete(), this._isInstant ? this._noTransition(this._hideReveal, [e]) : this._hideReveal(e), this._sort(), this._layout();\n  }, l._init = l.arrange, l._hideReveal = function (t) {\n    this.reveal(t.needReveal), this.hide(t.needHide);\n  }, l._getIsInstant = function () {\n    var t = this._getOption(\"layoutInstant\"),\n      e = void 0 !== t ? t : !this._isLayoutInited;\n    return this._isInstant = e, e;\n  }, l._bindArrangeComplete = function () {\n    function t() {\n      e && i && o && n.dispatchEvent(\"arrangeComplete\", null, [n.filteredItems]);\n    }\n    var e,\n      i,\n      o,\n      n = this;\n    this.once(\"layoutComplete\", function () {\n      e = !0, t();\n    }), this.once(\"hideComplete\", function () {\n      i = !0, t();\n    }), this.once(\"revealComplete\", function () {\n      o = !0, t();\n    });\n  }, l._filter = function (t) {\n    var e = this.options.filter;\n    e = e || \"*\";\n    for (var i = [], o = [], n = [], s = this._getFilterTest(e), r = 0; r < t.length; r++) {\n      var a = t[r];\n      if (!a.isIgnored) {\n        var u = s(a);\n        u && i.push(a), u && a.isHidden ? o.push(a) : u || a.isHidden || n.push(a);\n      }\n    }\n    return {\n      matches: i,\n      needReveal: o,\n      needHide: n\n    };\n  }, l._getFilterTest = function (t) {\n    return u && this.options.isJQueryFiltering ? function (e) {\n      return u(e.element).is(t);\n    } : \"function\" == typeof t ? function (e) {\n      return t(e.element);\n    } : function (e) {\n      return o(e.element, t);\n    };\n  }, l.updateSortData = function (t) {\n    var e;\n    t ? (t = n.makeArray(t), e = this.getItems(t)) : e = this.items, this._getSorters(), this._updateItemsSortData(e);\n  }, l._getSorters = function () {\n    var t = this.options.getSortData;\n    for (var e in t) {\n      var i = t[e];\n      this._sorters[e] = f(i);\n    }\n  }, l._updateItemsSortData = function (t) {\n    for (var e = t && t.length, i = 0; e && i < e; i++) {\n      var o = t[i];\n      o.updateSortData();\n    }\n  };\n  var f = function () {\n    function t(t) {\n      if (\"string\" != typeof t) return t;\n      var i = h(t).split(\" \"),\n        o = i[0],\n        n = o.match(/^\\[(.+)\\]$/),\n        s = n && n[1],\n        r = e(s, o),\n        a = d.sortDataParsers[i[1]];\n      return t = a ? function (t) {\n        return t && a(r(t));\n      } : function (t) {\n        return t && r(t);\n      };\n    }\n    function e(t, e) {\n      return t ? function (e) {\n        return e.getAttribute(t);\n      } : function (t) {\n        var i = t.querySelector(e);\n        return i && i.textContent;\n      };\n    }\n    return t;\n  }();\n  d.sortDataParsers = {\n    parseInt: function (_parseInt) {\n      function parseInt(_x) {\n        return _parseInt.apply(this, arguments);\n      }\n      parseInt.toString = function () {\n        return _parseInt.toString();\n      };\n      return parseInt;\n    }(function (t) {\n      return parseInt(t, 10);\n    }),\n    parseFloat: function (_parseFloat) {\n      function parseFloat(_x2) {\n        return _parseFloat.apply(this, arguments);\n      }\n      parseFloat.toString = function () {\n        return _parseFloat.toString();\n      };\n      return parseFloat;\n    }(function (t) {\n      return parseFloat(t);\n    })\n  }, l._sort = function () {\n    if (this.options.sortBy) {\n      var t = n.makeArray(this.options.sortBy);\n      this._getIsSameSortBy(t) || (this.sortHistory = t.concat(this.sortHistory));\n      var e = a(this.sortHistory, this.options.sortAscending);\n      this.filteredItems.sort(e);\n    }\n  }, l._getIsSameSortBy = function (t) {\n    for (var e = 0; e < t.length; e++) if (t[e] != this.sortHistory[e]) return !1;\n    return !0;\n  }, l._mode = function () {\n    var t = this.options.layoutMode,\n      e = this.modes[t];\n    if (!e) throw new Error(\"No layout mode: \" + t);\n    return e.options = this.options[t], e;\n  }, l._resetLayout = function () {\n    e.prototype._resetLayout.call(this), this._mode()._resetLayout();\n  }, l._getItemLayoutPosition = function (t) {\n    return this._mode()._getItemLayoutPosition(t);\n  }, l._manageStamp = function (t) {\n    this._mode()._manageStamp(t);\n  }, l._getContainerSize = function () {\n    return this._mode()._getContainerSize();\n  }, l.needsResizeLayout = function () {\n    return this._mode().needsResizeLayout();\n  }, l.appended = function (t) {\n    var e = this.addItems(t);\n    if (e.length) {\n      var i = this._filterRevealAdded(e);\n      this.filteredItems = this.filteredItems.concat(i);\n    }\n  }, l.prepended = function (t) {\n    var e = this._itemize(t);\n    if (e.length) {\n      this._resetLayout(), this._manageStamps();\n      var i = this._filterRevealAdded(e);\n      this.layoutItems(this.filteredItems), this.filteredItems = i.concat(this.filteredItems), this.items = e.concat(this.items);\n    }\n  }, l._filterRevealAdded = function (t) {\n    var e = this._filter(t);\n    return this.hide(e.needHide), this.reveal(e.matches), this.layoutItems(e.matches, !0), e.matches;\n  }, l.insert = function (t) {\n    var e = this.addItems(t);\n    if (e.length) {\n      var i,\n        o,\n        n = e.length;\n      for (i = 0; i < n; i++) o = e[i], this.element.appendChild(o.element);\n      var s = this._filter(e).matches;\n      for (i = 0; i < n; i++) e[i].isLayoutInstant = !0;\n      for (this.arrange(), i = 0; i < n; i++) delete e[i].isLayoutInstant;\n      this.reveal(s);\n    }\n  };\n  var c = l.remove;\n  return l.remove = function (t) {\n    t = n.makeArray(t);\n    var e = this.getItems(t);\n    c.call(this, t);\n    for (var i = e && e.length, o = 0; i && o < i; o++) {\n      var s = e[o];\n      n.removeFrom(this.filteredItems, s);\n    }\n  }, l.shuffle = function () {\n    for (var t = 0; t < this.items.length; t++) {\n      var e = this.items[t];\n      e.sortData.random = Math.random();\n    }\n    this.options.sortBy = \"random\", this._sort(), this._layout();\n  }, l._noTransition = function (t, e) {\n    var i = this.options.transitionDuration;\n    this.options.transitionDuration = 0;\n    var o = t.apply(this, e);\n    return this.options.transitionDuration = i, o;\n  }, l.getFilteredItemElements = function () {\n    return this.filteredItems.map(function (t) {\n      return t.element;\n    });\n  }, d;\n});\n$(document).ready(function () {\n  var $container = $(\".grid\"); // the container with all the elements to filter inside\n  var filters = {}; //should be outside the scope of the filtering function\n\n  /* --- read the documentation on isotope.metafizzy.co for more options --- */\n  var $grid = $container.isotope({\n    itemSelector: \".item\",\n    // the elements to filter\n    percentPosition: true // true if you use percentage widths\n  });\n\n  // save some classes for later usage\n  /* ---\n  activeClass: adds this class to filters that are selected (active)\n  comboClass: the class that indicates that the filter group is a chain filter, i.e. if you select two filters, only items with BOTH filters will be shown\n  exclClass: the class that indicates that the filter group is an exclusion filter, i.e. you can only select one filter from that group at a time\n  resetClass: the class for the overall reset button\n  --- */\n  var activeClass = \"selected\",\n    comboClass = \"combine\",\n    exclClass = \"exclusive\",\n    resetClass = \"reset\";\n  var $defaults = $(\"a.\" + activeClass + '[data-filter-value=\"\"]');\n  $(\".option-set a\").click(function (e) {\n    // insert your link selector where it says '.option-set a'\n    var $this = $(this); // cache the clicked link\n    var comboFilter,\n      filterAttr = \"data-filter-value\";\n    if (resetClass && !$this.hasClass(resetClass)) {\n      // defining variables\n      var filterValue = $this.attr(filterAttr); // cache the filter\n      var $optionSet = $this.parents(\".option-set\"); // cache the parent element\n      var group = $optionSet.attr(\"data-filter-group\"); // cache the parent filter group\n      var filterGroup = filters[group]; // make new variable for the property being filtered\n      if (!filterGroup) {\n        // if the property doesn't exist\n        filterGroup = filters[group] = []; // make a new empty array\n      }\n\n      var $selectAll = $optionSet.find(\"a[\" + filterAttr + '=\"\"]'); // cache the 'select all' button in the current group\n      $(\".\" + resetClass).removeClass(activeClass);\n      comboFiltering($this, filters, filterAttr, filterValue, $optionSet, group, $selectAll, activeClass, comboClass, exclClass);\n      comboFilter = getComboFilter(filters); // join all the filters\n      if (!comboFilter.length) $(\"a.\" + resetClass).addClass(activeClass);\n      $this.toggleClass(activeClass);\n    } else {\n      filters = {};\n      comboFilter = \"\";\n      $(\".option-set a\").removeClass(activeClass);\n      $(this).addClass(activeClass);\n      $defaults.addClass(activeClass);\n    }\n    $grid.isotope({\n      filter: comboFilter\n    });\n    e.preventDefault();\n  });\n});\nfunction comboFiltering($this, filters, filterAttr, filterValue, $optionSet, group, $selectAll, activeClass, comboClass, exclClass) {\n  // for non-exclusive groups of filters\n  if (!$optionSet.hasClass(exclClass)) {\n    // replace 'exclusive' with the class of your exclusive filter groups\n    // if link is a filter that isn't selected\n    if (!$this.hasClass(activeClass) && filterValue.length) {\n      filters[group].push(filterValue); // add filter to array\n      $selectAll.removeClass(activeClass); // remove the selected class from the 'select all' button\n    } else if (filterValue.length) {\n      // if link is a selected filter\n      // remove filter from array\n      // check if the filter group we're concerned with is a combination filter (.one.two instead of .one,.two)\n      if ($optionSet.hasClass(comboClass)) {\n        filters[group][0] = filters[group][0].replace(filterValue, \"\"); // delete the filter from the combined string\n        if (!filters[group][0].length)\n          // check if there is anything left in the string after deletion\n          filters[group].splice(0, 1); // if no, remove the empty string\n      } else {\n        // if filter group is not a combo filter\n        var curIndex = filters[group].indexOf(filterValue); // get index of filter string in array\n        if (curIndex > -1) filters[group].splice(curIndex, 1); // remove the filter\n      }\n\n      if (!$optionSet.find(\"a.\" + activeClass).not($this).length)\n        // if there are no remaining filters\n        $selectAll.addClass(activeClass); // add the active class to the 'select all' button\n    } else {\n      // if link is the show all button for that group\n      $optionSet.find(\"a.\" + activeClass).removeClass(activeClass); // remove the active class from all other buttons\n      filters[group] = []; // clear the array of all filters\n    }\n    // join everything to a single string for the combined filtering groups\n    if ($optionSet.hasClass(comboClass) && filters[group].length) filters[group] = [filters[group].join(\"\")];\n  } else {\n    // for exclusive groups\n    // if link is a filter that isn't selected\n    if (!$this.hasClass(activeClass) && filterValue.length) {\n      // run a loop for all active filters\n      $optionSet.find(\"a.\" + activeClass).each(function (k, filterLink) {\n        // remove all active filters in the same group from the array\n        var removeFilter = $(filterLink).attr(filterAttr);\n        var removeIndex = filters[group].indexOf(removeFilter);\n        filters[group].splice(removeIndex, 1);\n      });\n      filters[group].push(filterValue); // add selected filter to array\n      $optionSet.find(\"a.\" + activeClass).removeClass(activeClass); // remove the active class from all other links in the group\n    } else if (filterValue.length) {\n      // if link is a selected filter\n      // remove filter from array\n      var curIndex = filters[group].indexOf(filterValue);\n      if (curIndex > -1) filters[group].splice(curIndex, 1);\n      if (!$optionSet.find(\"a.\" + activeClass).not($this).length)\n        // if there are no remaining filters\n        $selectAll.addClass(activeClass); // add active class to 'select all' button\n    } else {\n      // if link is the show all button for that group\n      $optionSet.find(\"a.\" + activeClass).removeClass(activeClass); // remove active class from all other buttons\n      filters[group] = []; // reset all filters for this group\n    }\n  }\n}\n/* --- concat filters --- */\nfunction getComboFilter(filters) {\n  // pass the entire array of filters to the function\n  var i = 0; // set counter variable as zero\n  var comboFilters = []; // make a new array to save the string of filters\n\n  for (var prop in filters) {\n    // loop through all the properties in the filter array passed to the function\n    var filterGroup = filters[prop]; // define variable\n    // skip to next filter group if it doesn't have any values\n    if (!filterGroup.length) {\n      continue; // exit loop and move on with next iteration\n    }\n\n    if (i === 0) {\n      // copy to new array\n      comboFilters = filterGroup.slice(0);\n    } else {\n      var filterSelectors = [];\n      // copy to fresh array\n      var groupCombo = comboFilters.slice(0);\n      // merge filter Groups\n      for (var k = 0, len3 = filterGroup.length; k < len3; k++) {\n        for (var j = 0, len2 = groupCombo.length; j < len2; j++) {\n          filterSelectors.push(groupCombo[j] + filterGroup[k]);\n        }\n      }\n      // apply filter selectors to combo filters for next group\n      comboFilters = filterSelectors;\n    }\n    i++; // increment\n  }\n\n  var comboFilter = comboFilters.join(\", \");\n  return comboFilter;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"../../node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./isotope.js\n");

/***/ })

/******/ });